name: make release on push
on:
  push:
    branches:
      - master
    paths:
      - "pyproject.toml"
jobs:
  prepare-release:
    name: Compile binary and upload artifact
    runs-on: macos-latest
    outputs:
      arcl_version: ${{ steps.get-version.outputs.arcl_version }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python3 -m pip install pip wheel poetry --upgrade
          poetry config virtualenvs.in-project true
          poetry update --lock
          poetry install
      - name: Get version
        id: get-version
        run: |
          ARCHIMEDES_CLI_VERSION=$(poetry run python -c 'import arcl; print(arcl.__version__)')
          echo "ARCHIMEDES_CLI_VERSION=$ARCHIMEDES_CLI_VERSION" >> $GITHUB_ENV
          echo "::set-output name=arcl_version::$ARCHIMEDES_CLI_VERSION"
      - name: Compile binaries for x86_64
        run: |
          poetry run pyinstaller --target-architecture x86_64 --hidden-import cookiecutter.extensions --hidden-import jinja2_time --name arcl --onefile ./.venv/lib/python3.9/site-packages/arcl/cli.py
          chmod +x ./dist/arcl
      - name: Zip the binary and delete it
        run: |
          mkdir -p dist/arcl-macOS/Formula
          mkdir -p dist/arcl-macOS/bin
          cd dist/
          zip -9 arcl-macOS/bin/arcl-v${{ env.ARCHIMEDES_CLI_VERSION }}.zip arcl
          rm arcl
      - name: Update arcl.rb file
        run: |
          pip install jinja2-cli
          jinja2 arcl.rb.jinja2 -o dist/arcl-macOS/Formula/arcl.rb -D version=${{ env.ARCHIMEDES_CLI_VERSION }} -D sha256_hash_of_zip=$(python3 sha256.py ./dist/arcl-macOS/bin/arcl-v${{ env.ARCHIMEDES_CLI_VERSION }}.zip)
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: arcl-macOS-x86_64-v${{ env.ARCHIMEDES_CLI_VERSION }}
          path: dist/arcl-macOS/**/*
  make-release:
    name: Download artifact, make a release and update arcl.rb
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: arcl-macOS-x86_64-v${{ needs.prepare-release.outputs.arcl_version }}
      - name: Create release in homebrew-archimedes
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: "bin/*"
          commit: master
          tag: v${{ needs.prepare-release.outputs.arcl_version }}
      - name: Create a folder with files to upload
        run: |
          mkdir changes
          mv ./Formula ./changes/
      - name: Push updated arcl formula
        uses: tagus/git-deploy@v0.4.1
        with:
          changes: changes
          repository: git@github.com:OptimeeringAS/homebrew-archimedes.git
          ssh_key: ${{ secrets.HOMEBREW_ARCHIMEDES_DEPLOY_KEY }}
          name: Optimeering AS (auto)
          email: dev@optimeering.com
          message: Update arcl formula to version v${{ needs.prepare-release.outputs.arcl_version }}
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: arcl-macOS-x86_64-v${{ needs.prepare-release.outputs.arcl_version }}
