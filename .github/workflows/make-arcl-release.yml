name: make release on push
on:
  push:
    branches:
      - master
    paths:
      - "pyproject.toml"
jobs:
  make-release:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install arcl and pyinstaller
        run: |
          python3 -m pip install pip wheel poetry --upgrade
          poetry config virtualenvs.in-project true
          poetry update --lock
          poetry install
      - name: Get version
        run: |
          echo "ARCHIMEDES_CLI_VERSION=$(poetry run python -c 'import arcl; print(arcl.__version__)')" >> $GITHUB_ENV
      - name: Compile binaries for x86_64
        run: |
          poetry run pyinstaller --target-architecture x86_64 --hidden-import cookiecutter.extensions --hidden-import jinja2_time --name arcl --onefile ./.venv/lib/python3.9/site-packages/arcl/cli.py
          chmod +x ./dist/arcl
      - name: Zip the binary and delete it
        run: |
          cd dist/
          zip -9 arcl-v${{ env.ARCHIMEDES_CLI_VERSION }}.zip arcl
          rm arcl
      - name: Create release in homebrew-archimedes
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: "dist/*"
          commit: master
          tag: v${{ env.ARCHIMEDES_CLI_VERSION }}
      - name: Update arcl.rb file
        run: |
          mkdir -p changes/Formula/
          pip install jinja2-cli
          jinja2 arcl.rb.jinja2 -o changes/Formula/arcl.rb -D version=${{ env.ARCHIMEDES_CLI_VERSION }} -D sha256_hash_of_zip=$(python3 sha256.py ./dist/arcl-v${{ env.ARCHIMEDES_CLI_VERSION }}.zip)
      - name: Push updated arcl formula
        uses: tagus/git-deploy@v0.4.1
        with:
          changes: changes
          name: Optimeering AS (auto)
          email: dev@optimeering.com
          message: Update arcl version
